package xklaim.coordination

import coordination.JointTrajectory
import coordination.JointTrajectoryPoint
import java.util.Arrays
import java.util.List
import ros.Publisher
import ros.RosBridge

proc Before_pick() {
	val rosbridgeWebsocketURI = "ws://0.0.0.0:9090"

	// Create the bridge and connect it to the ROS bridge
	val bridge = new RosBridge()
	bridge.connect(rosbridgeWebsocketURI, true)

	// Initialize a publisher for the topic related to the control of the robot's arm
	val pub = new Publisher("/arm_controller/command", "trajectory_msgs/JointTrajectory", bridge);

	val jointTrajectoryPoints = new JointTrajectoryPoint();

	// desired position for performing first action "before pick" 
	jointTrajectoryPoints.positions = Arrays.asList(-3.14, -0.2169, -0.5822, 3.14, 1.66, -0.01412);
	jointTrajectoryPoints.time_from_start.nsecs = 0;
	jointTrajectoryPoints.time_from_start.secs = 120;
	// JointTrajectory Initialization
	val JointTrajectory before_pick = new JointTrajectory();
	var List<JointTrajectoryPoint> list = Arrays.asList(jointTrajectoryPoints);
	before_pick.points = list;
	before_pick.joint_names = Arrays.asList("joint1", "joint2", "joint3", "joint4", "joint5", "joint6");
	before_pick.header.stamp.secs = 0;
	before_pick.header.stamp.nsecs = 0;
	before_pick.header.frame_id = "";
	// publishing the positions of the joints
	pub.publish(before_pick);

}
