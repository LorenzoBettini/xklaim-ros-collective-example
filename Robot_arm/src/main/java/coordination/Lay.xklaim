package xklaim.coordination

import coordination.JointTrajectory
import klava.Locality
import ros.Publisher
import ros.RosBridge

proc Lay(String rosbridgeWebsocketURI,Locality robot2) {

	// Create the bridge and connect it to the ROS bridge
	val bridge = new RosBridge()
	bridge.connect(rosbridgeWebsocketURI, true)

	// Initialize a publisher for the topic related to the control of the robot's arm
	val pub = new Publisher("/arm_controller/command", "trajectory_msgs/JointTrajectory", bridge);

	// here when the robot send message arrived, the arm should pose the object.
	in("ready")@self
	
	
	val JointTrajectory posefinal = new JointTrajectory().positions(#[
		-0.9546,
		-0.0097,
		-0.9513,
		3.1400,
		1.7749,
		-0.0142
	]).jointNames(#[
		"joint1",
		"joint2",
		"joint3",
		"joint4",
		"joint5",
		"joint6"
	]);
	pub.publish(posefinal);
	println(String.format("Iam posing"))

}
